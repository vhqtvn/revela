#!/bin/bash

#
# TODO: update `create-proofs-for-testing.sh` to match the latest circuit, then provide instructions.
#

set -e

scriptdir="$(cd "$(dirname "$0")" >/dev/null 2>&1 && pwd)"
repodir=$scriptdir

echo "Executing from directory: $scriptdir"

print_usage() {
cat <<DONE
Usage: `basename $0` <keyless-circuit-branch> <prover_key_path> [<output_dir>]

Creates proofs for the inputs generated by the keyless-circuit's input_gen.py 
script. We use these proofs to test our Rust verifier.

Uses <prover_key_path> as the path to the prover key.

If <keyless-circuit-branch> is --local then uses the current repo rather than 
cloning a remote branch inside $scriptdir/tmp/keyless-circuit-<branch-name>.

Proofs are stored in <output_dir> which defaults to the root of the repository (i.e., $repodir)
DONE
}

pushd() {
    command pushd "$@" > /dev/null
}

popd() {
    command popd "$@" > /dev/null
}

proofgen() {
    branch=$1
    prover_key=$2
    outdir=$3
    
    if [ ! -f $prover_key ]; then
        echo "$prover_key is not a file (may be a directory?)"
        exit 1
    fi

    prover_key=`realpath $prover_key`

    echo
    echo "Using proving key from $prover_key"

    tmpdir=tmp
    mkdir -p $tmpdir
    pushd $tmpdir/ 
    {
        if [ $branch == "--local" ]; then
            echo
            echo "Using current repo in $repodir"
            keylessrepo=$repodir
        else
            keylessrepo=aptos-keyless-circuit-$(echo $branch | tr / -)
            echo
            echo "Cloning or updating aptos-keyless-circuit:$branch in $keylessrepo..."
            if [ -d $keylessrepo ]; then 
                echo "Looks like repo is cloned. Updating..."
                pushd $keylessrepo; git checkout $branch; popd
            else
                echo "Cloning..."
                git clone git@github.com:aptos-labs/aptos-keyless-circuit $keylessrepo
                pushd $keylessrepo; git checkout $branch; popd
            fi
        fi
        pushd $keylessrepo 
        {
            echo
            echo "Creating python3 virtual env w/ deps..."
            virtualenv ig
            source ./ig/bin/activate

            pip3 install pyjwt pycryptodome cryptography
    
            pushd templates/
            {
                echo
                echo "(Re)compiling circuit. This will take several seconds..."
                circom -l . main.circom --r1cs --wasm --sym 
            }
            popd

            echo
            echo "Running input_gen.py..."
            touch input.json
            python3 input_gen.py
            pushd templates/main_js
            {
                echo
                echo "Generating witness..."
                node generate_witness.js main.wasm ../../input.json witness.wtns
            }
            popd

            echo
            echo "Generating proof. Should take around 30 seconds..."
            rm -f $outdir/proof.json
            rm -f $outdir/public.json
            snarkjs groth16 prove $prover_key templates/main_js/witness.wtns $outdir/proof.json $outdir/public.json

            echo
            echo "Done. Find the {input,proof,public}.json output files in `pwd`"
        }
        popd
    }
    popd
}

if [ "$#" -lt 2 ]; then
    print_usage
    exit 1
fi

outdir=${3:-$repodir}
mkdir -p $outdir
pushd $repodir/
    proofgen "$1" "$2" "$outdir"
popd
