# This workflow tests that the Aptos CLI can be compiled on Windows
name: "Windows CLI Build"

on:
  workflow_dispatch:
  pull_request:
    types: [labeled, opened, synchronize, reopened, auto_merge_enabled]
  push:
    branches:
      - main

jobs:
  windows-build:
    runs-on: windows-latest-8-core
    if: | # Only run on each PR once an appropriate event occurs
      (
        github.event_name == 'workflow_dispatch' ||
        github.event_name == 'push' ||
        contains(github.event.pull_request.labels.*.name, 'CICD:run-windows-tests') ||
        github.event.pull_request.auto_merge != null
      )
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0 # Fetch all git history for accurate target determination

      # This action will cache ~/.cargo and ./target (or the equivalent on Windows in
      # this case). See more here:
      # https://github.com/Swatinem/rust-cache#cache-details
      - name: Run cargo cache
        uses: Swatinem/rust-cache@359a70e43a0bb8a13953b04a90f76428b4959bb6 # pin@v2.2.0

      - name: Install the developer tools
        run: PowerShell -ExecutionPolicy Bypass -File scripts/windows_dev_setup.ps1

      # This is required for the openssl-sys crate to build.
      # See: https://github.com/sfackler/rust-openssl/issues/1542#issuecomment-1399358351
      - name: Update the VCPKG root
        run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Install OpenSSL
        run: vcpkg install openssl:x64-windows-static-md --clean-after-build

      # Output the changed files
      - name: Output the changed files
        run: cargo x changed-files -vv
        shell: bash

      # Output the affected packages
      - name: Output the affected packages
        run: cargo x affected-packages -vv
        shell: bash

      # Build and test the Aptos CLI (if it has changed)
      - name: Build and test the CLI
        run: cargo x targeted-cli-tests -vv
        shell: bash
