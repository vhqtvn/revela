on:
  workflow_call:
    inputs:
      image_tag_prefix:
        required: true
        type: string
        description: a prefix to use for image tags. E.g. `devnet`. It results in an image tag like `:devnet_<git_sha>`
  workflow_dispatch:
    inputs:
      image_tag_prefix:
        required: true
        type: string
        default: adhoc
        description: a prefix to use for image tags. E.g. `devnet`. It results in an image tag like `:devnet_<git_sha>`

permissions:
  contents: read
  id-token: write #required for GCP Workload Identity federation

jobs:
  wait-for-images-to-have-been-built:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for images to have been built
        timeout-minutes: 30
        uses: lewagon/wait-on-check-action@0179dfc359f90a703c41240506f998ee1603f9ea # pin@v1.0.0
        with:
          ref: ${{ github.ref }}
          check-name: "rust-images / rust-all" # only copy the release images to dockerhub
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30 # wait 30 seconds between making polling API calls, default is 10 but we ran in the past into rate-limiting issues with too frequent polling

  copy-images:
    needs: wait-for-images-to-have-been-built
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3

      - uses: ./.github/actions/gar-auth
        with:
          GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          GCP_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Login to ECR
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # pin@v2
        with:
          registry: ${{ secrets.AWS_ECR_ACCOUNT_NUM }}.dkr.ecr.us-west-2.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Docker Hub
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # pin@v2
        with:
          username: ${{ secrets.ENV_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ENV_DOCKERHUB_PASSWORD }}

      - name: Release Images
        env:
          GIT_SHA: ${{ github.sha }}
          GCP_DOCKER_ARTIFACT_REPO: ${{ secrets.GCP_DOCKER_ARTIFACT_REPO }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ECR_ACCOUNT_NUM }}
          IMAGE_TAG_PREFIX: ${{ inputs.image_tag_prefix }}
        run: ./docker/release_images.sh
