name: Run Forge

on:
  # this is called from within the build-images.yaml workflow since we depend on the images having been built before
  workflow_call:
    inputs:
      GIT_SHA:
        required: true
        type: string
        description:
      merge_or_canary:
        required: true
        type: string
        description: "indicate whether this is a forge run for an auto-merge or a canary, must be `merge` or `canary`"
      FORGE_NAMESPACE:
        required: true
        type: string
        description: The Forge k8s namespace to be used for test. This value should manage Forge test concurrency. It may be truncated.

# temporarily limit amount of concurrent forge runs until we have autoscaling forge
concurrency:
  group: ${{ inputs.merge_or_canary }}

env:
  AWS_ACCOUNT_NUM: ${{ secrets.ENV_ECR_AWS_ACCOUNT_NUM }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-west-2
  IMAGE_TAG: ${{ inputs.GIT_SHA }}
  FORGE_ENABLED: ${{ secrets.FORGE_ENABLED }}
  FORGE_CLUSTER_NAME: ${{ secrets.FORGE_CLUSTER_NAME }}
  FORGE_OUTPUT: forge_output.txt
  FORGE_REPORT: forge_report.json
  FORGE_NAMESPACE: ${{ inputs.FORGE_NAMESPACE }}
  GRAFANA_BASE_URL: ${{ secrets.GRAFANA_BASE_URL }}

jobs:
  forge:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        if: env.FORGE_ENABLED == 'true'
        with:
          ref: ${{ inputs.GIT_SHA }}
      - name: Set kubectl context
        if: env.FORGE_ENABLED == 'true'
        run: aws eks update-kubeconfig --name $FORGE_CLUSTER_NAME
      - name: Run Forge
        if: env.FORGE_ENABLED == 'true'
        shell: bash
        env:
          PUSH_GATEWAY: ${{ secrets.PUSH_GATEWAY }}
          PUSH_GATEWAY_USER: ${{ secrets.PUSH_GATEWAY_USER }}
          PUSH_GATEWAY_PASSWORD: ${{ secrets.PUSH_GATEWAY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set +e

          # source this script to run and get environment variables
          source testsuite/run_forge.sh

          # attempt to get the PR number
          # If this workflow was not triggered by PR, then the result is null and will not comment on PR
          PR_NUMBER="${{ github.event.number }}"

          # export env vars for next step
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "FORGE_EXIT_CODE=$FORGE_EXIT_CODE" >> $GITHUB_ENV

          # env vars to form the comment
          echo "FORGE_COMMENT_HEADER=$FORGE_COMMENT_HEADER" >> $GITHUB_ENV
          echo "FORGE_DASHBOARD_LINK=$FORGE_DASHBOARD_LINK" >> $GITHUB_ENV
          echo "FORGE_REPORT_TXT=$FORGE_REPORT_TXT" >> $GITHUB_ENV

          # report metrics to pushgateway
          echo "forge_job_status {FORGE_EXIT_CODE=\"$FORGE_EXIT_CODE\",FORGE_CLUSTER_NAME=\"$FORGE_CLUSTER_NAME\",FORGE_NAMESPACE=\"$FORGE_NAMESPACE\"} $GITHUB_RUN_ID" | curl -u "$PUSH_GATEWAY_USER:$PUSH_GATEWAY_PASSWORD" --data-binary @- ${PUSH_GATEWAY}/metrics/job/forge
      - name: Post result as PR comment
        if: env.FORGE_ENABLED == 'true' && env.PR_NUMBER != null
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            ${{ env.FORGE_COMMENT_HEADER }}
            ${{ env.FORGE_BLOCKING == 'true' && 'Forge is land-blocking' || 'Forge is not land-blocking' }}
            * [Test runner output](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            * [Grafana dashboard](${{ env.FORGE_DASHBOARD_LINK }})
            ```
            ${{ env.FORGE_REPORT_TXT }}
            ```
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pr_number: ${{ env.PR_NUMBER }}

      - name: Check Forge status
        if: env.FORGE_ENABLED == 'true'
        shell: bash
        run: |
          if [ "$FORGE_BLOCKING" = "true" ]; then
            exit $FORGE_EXIT_CODE
          fi
