name: "replay-LLT-transactions-nightly"
on:
  # Allow triggering manually
  workflow_dispatch:
    inputs:
      GIT_SHA:
        required: false
        type: string
        description: The git SHA1 to test. If not specified, Forge will check the latest commits on the current branch
  schedule:
    - cron: "0 * * * */1"
  pull_request:
    paths:
      - ".github/workflows/nightly-replay-verify.yaml"

env:
  BUCKET: aptos-mainnet-backup-backup-831a69a8
  SUB_DIR: e1

jobs:
  replay-transactions:
    timeout-minutes: 720
    runs-on: high-perf-docker
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3
        with:
          ref: ${{ inputs.GIT_SHA }}
          fetch-depth: 0 # get all the history because cargo xtest --change-since origin/main requires it.
      - uses: ./.github/actions/rust-setup
      - name: install dependencies
        shell: bash
        run: |
          echo "${HOME}/bin/" >> $GITHUB_PATH # default INSTALL_DIR to path
          scripts/dev_setup.sh -b -i awscli # install individual tool awscli in batch mode
          sudo apt-get update -y && sudo apt-get install -y expect
      - name: Build CLI binaries in release mode
        run: cargo build --release -p backup-cli --bin replay-verify --bin db-backup
      - name: query latest version in backup, at the same time, pre-heat metadata cache
        run: |
          set -o nounset -o errexit -o pipefail
          target/release/db-backup one-shot query backup-storage-state \
          --metadata-cache-dir ./metadata-cache \
          command-adapter --config terraform/helm/fullnode/files/backup/s3-public.yaml \
          | echo LATEST_VERSION=`grep -Po '(?<=latest_transaction_version: )\d+'` \
          | tee -a $GITHUB_ENV
      - name: run replay-verify in parallel
        run: |
          set -o nounset -o errexit -o pipefail
          HISTORY_START=0
          N=8
          PER_PARTITION=$(( ($LATEST_VERSION - $HISTORY_START) / $N ))
          
          for n in `seq 1 $N`
          do
            END=$(( $HISTORY_START + $n * $PER_PARTITION ))
            END=$(($n == $N && $LATEST_VERSION > $END ? $LATEST_VERSION : $END))
            START=$(($END - $PER_PARTITION))
            NAME=run_${n}_${START}_$END
          
            mkdir $NAME
            cp -r metadata-cache $NAME/

            echo [main process] spawning $NAME
            unbuffer target/release/replay-verify \
            --concurrent-downloads 1 \
            --replay-concurrency-level 1 \
            --metadata-cache-dir ./$NAME/metadata-cache \
            --target-db-dir ./$NAME/db \
            --start-version $START \
            --end-version $END \
            command-adapter --config terraform/helm/fullnode/files/backup/s3-public.yaml 2>&1 \
            | sed --unbuffered -e "s/^/[partition $NAME] /" &
          done
          
          # wait for subprocesses
          for n in `seq 1 $N`
          do
            wait -n
            echo [main process] run $N finished.
          done
          echo [main process] finished.
        timeout-minutes: 720
