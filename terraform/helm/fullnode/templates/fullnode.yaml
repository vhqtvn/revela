{{ $fullnode_statefulset := lookup "apps/v1" "StatefulSet" $.Release.Namespace (include "aptos-fullnode.fullname" .) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aptos-fullnode.fullname" . }}
  labels:
    {{- include "aptos-fullnode.labels" . | nindent 4 }}
    app.kubernetes.io/name: fullnode
spec:
  serviceName: {{ include "aptos-fullnode.fullname" . }}
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "aptos-fullnode.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: fullnode
  template:
    metadata:
      labels:
        {{- include "aptos-fullnode.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: fullnode
        {{- if $.Values.chain.name }}
        chain_name: {{ $.Values.chain.name }}
        {{- end}}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9101"
        {{- if $.Values.metrics.destination }}
        aptos.dev/metrics-destination: {{ $.Values.metrics.destination }}
        {{- end}}
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
      {{- with .Values.restore }}
      {{- if .enabled }}
      - name: restore
        image: {{ .image.repo }}:{{ .image.tag | default $.Values.imageTag }}
        imagePullPolicy: {{ .image.pullPolicy }}
        resources:
          {{- toYaml .resources | nindent 10 }}
        command:
        - /bin/bash
        - -c
        - |-
          set -euxo pipefail
          # cleanup aptosdb
          if [ -f /opt/aptos/data/restore-failed ] || \
              [ ! -f /opt/aptos/data/restore-uid ] || \
              [ "$(cat /opt/aptos/data/restore-uid)" != "{{ .config.restore_epoch }}" ]; then
            rm -rf /opt/aptos/data/db /opt/aptos/data/restore-{complete,failed}
            echo "{{ .config.restore_epoch }}" > /opt/aptos/data/restore-uid
          fi

          [ -f /opt/aptos/data/restore-complete ] && exit 0
          # start restore process
          /usr/local/bin/aptos-debugger aptos-db restore bootstrap-db \
            --concurrent-downloads {{ .config.concurrent_downloads }} \
            {{ range .config.trusted_waypoints }} --trust-waypoint {{ . }}{{ end }} \
            --target-db-dir /opt/aptos/data/db \
            --metadata-cache-dir /opt/aptos/data/aptos-restore-metadata \
            --ledger-history-start-version {{ .config.start_version }} \
            {{- if .config.target_version }} --target-version {{- .config.target_version }}{{- end }}
            --command-adapter-config /opt/aptos/etc/{{ .config.location }}.yaml

          if [ $? -gt 0 ]; then
            # mark restore as failed
            touch /opt/aptos/data/restore-failed
            exit 1
          else
            # success, remove the marker
            rm -f /opt/aptos/data/restore-failed
            touch /opt/aptos/data/restore-complete
          fi
        env:
        - name: RUST_LOG
          value: "debug"
        - name: RUST_BACKTRACE
          value: "full"
        {{- if (include "backup.pushMetricsEndpoint" $) }}
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PUSH_METRICS_ENDPOINT
          value: "{{- include "backup.pushMetricsEndpoint" $ }}/api/v1/import/prometheus?extra_label=role={{- .jobName | default "db_restore" }}&extra_label=kubernetes_pod_name=$(KUBERNETES_POD_NAME)"
        {{- end }}
        - name: CONTROLLER_UID
          valueFrom:
            fieldRef:
              fieldPath: "metadata.labels['controller-uid']"
        {{- include "backup.backupEnvironment" (dict "config" .config "era" (default $.Values.chain.era .config.restore_era)) | nindent 8 }}
        volumeMounts:
        - name: backup-config
          mountPath: /opt/aptos/etc
        - name: aptos-data
          mountPath: /opt/aptos/data
        - name: tmp
          mountPath: /tmp
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- end }} # if .enabled
      {{- end }} # with .Values.restore
      containers:
      - name: fullnode
        {{- if and $fullnode_statefulset (not $.Values.manageImages) }} # if the statefulset already exists and we do not want helm to simply overwrite the image, use the existing image
        image: {{ (first $fullnode_statefulset.spec.template.spec.containers).image }}
        {{- else }}
        image: {{ .Values.image.repo }}:{{ .Values.image.tag | default $.Values.imageTag }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /bin/bash
        - -c
        - |-
          set -euxo pipefail
          if [[ -f /opt/aptos/data/wipe-db ]]; then
            # Wipe DB
            rm -rf /opt/aptos/data/db
            # Delete the command file so we only wipe the DB once
            rm -vf /opt/aptos/data/wipe-db
          fi
          {{- if and (not .Values.chain.genesisConfigmap) (not .Values.chain.genesisSecret) }}
          # Download genesis and waypoint if necessary
          curl -o /opt/aptos/genesis/waypoint.txt {{ (get .Values.aptos_chains .Values.chain.name).waypoint_txt_url }}
          curl -o /opt/aptos/genesis/genesis.blob {{ (get .Values.aptos_chains .Values.chain.name).genesis_blob_url }}
          {{- end }}
          # Start the node
          /usr/local/bin/aptos-node -f /opt/aptos/etc/fullnode.yaml
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        env:
        - name: RUST_LOG
          value: {{ .Values.rust_log }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RUST_BACKTRACE
          value: "0"
        volumeMounts:
        - name: aptos-config
          mountPath: /opt/aptos/etc
        - name: aptos-genesis
          mountPath: /opt/aptos/genesis
        - name: aptos-data
          mountPath: /opt/aptos/data
        - name: tmp
          mountPath: /tmp
        ports:
        - containerPort: 6182
        - containerPort: 6186
        - containerPort: 8081
        - containerPort: 8080
          name: api
        - containerPort: 9101
          name: metrics
        - containerPort: 9102
          name: admin
        # NOTE: these require the API to be enabled, which is not always the case
        livenessProbe: # restart the pod if the REST API is ever unresponsive
          httpGet:
            path: /v1/-/healthy
            port: 8080
          initialDelaySeconds: 30
        readinessProbe: # pod is ready when state sync is caught up
          httpGet:
            path: /v1/-/healthy?duration_secs=10
            port: 8080
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 6180
        runAsGroup: 6180
        fsGroup: 6180
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: aptos-config
        configMap:
          name: {{ include "aptos-fullnode.fullname" . }}
      - name: aptos-genesis
      {{- if .Values.chain.genesisConfigmap }}
        configMap:
          name: {{ .Values.chain.genesisConfigmap }}
      {{- else if .Values.chain.genesisSecret }}
        secret:
          secretName: {{ .Values.chain.genesisSecret }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: aptos-data
        persistentVolumeClaim:
          claimName: {{ include "aptos-fullnode.fullname" . }}-e{{ .Values.chain.era }}
      - name: backup-config
        configMap:
          name: {{ include "backup.fullname" . }}-backup
      - name: tmp
        emptyDir: {}
      serviceAccountName: {{ include "aptos-fullnode.serviceAccountName" . }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{.Values.imagePullSecret}}
      {{- end }}
